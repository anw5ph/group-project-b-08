# Generated by Django 4.0.2 on 2022-04-03 21:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(choices=[('AAS', 'AAS'), ('ACCT', 'ACCT'), ('AFFL', 'AFFL'), ('AIRS', 'AIRS'), ('ALAR', 'ALAR'), ('AM', 'AM'), ('AMST', 'AMST'), ('ANTH', 'ANTH'), ('APMA', 'APMA'), ('ARAB', 'ARAB'), ('ARAD', 'ARAD'), ('ARAH', 'ARAH'), ('ARCH', 'ARCH'), ('ARCY', 'ARCY'), ('ARH', 'ARH'), ('ARTH', 'ARTH'), ('ARTR', 'ARTR'), ('ARTS', 'ARTS'), ('ASL', 'ASL'), ('ASTR', 'ASTR'), ('BIMS', 'BIMS'), ('BIOC', 'BIOC'), ('BIOL', 'BIOL'), ('BIOP', 'BIOP'), ('BME', 'BME'), ('BUS', 'BUS'), ('CASS', 'CASS'), ('CE', 'CE'), ('CELL', 'CELL'), ('CHE', 'CHE'), ('CHEM', 'CHEM'), ('CHIN', 'CHIN'), ('CHTR', 'CHTR'), ('CJ', 'CJ'), ('CLAS', 'CLAS'), ('COGS', 'COGS'), ('COLA', 'COLA'), ('COMM', 'COMM'), ('CONC', 'CONC'), ('CPE', 'CPE'), ('CREO', 'CREO'), ('CS', 'CS'), ('DANC', 'DANC'), ('DEM', 'DEM'), ('DH', 'DH'), ('DRAM', 'DRAM'), ('DS', 'DS'), ('EALC', 'EALC'), ('EAST', 'EAST'), ('ECE', 'ECE'), ('ECON', 'ECON'), ('EDHS', 'EDHS'), ('EDIS', 'EDIS'), ('EDLF', 'EDLF'), ('EDNC', 'EDNC'), ('EGMT', 'EGMT'), ('ELA', 'ELA'), ('ENCW', 'ENCW'), ('ENGL', 'ENGL'), ('ENGR', 'ENGR'), ('ENTP', 'ENTP'), ('ENWR', 'ENWR'), ('EP', 'EP'), ('ESL', 'ESL'), ('ETP', 'ETP'), ('EURS', 'EURS'), ('EVAT', 'EVAT'), ('EVEC', 'EVEC'), ('EVGE', 'EVGE'), ('EVHY', 'EVHY'), ('EVSC', 'EVSC'), ('FORU', 'FORU'), ('FREN', 'FREN'), ('FRTR', 'FRTR'), ('GBAC', 'GBAC'), ('GBUS', 'GBUS'), ('GCCS', 'GCCS'), ('GCNL', 'GCNL'), ('GCOM', 'GCOM'), ('GDS', 'GDS'), ('GERM', 'GERM'), ('GETR', 'GETR'), ('GHSS', 'GHSS'), ('GNUR', 'GNUR'), ('GREE', 'GREE'), ('GSAS', 'GSAS'), ('GSCI', 'GSCI'), ('GSGS', 'GSGS'), ('GSMS', 'GSMS'), ('GSSJ', 'GSSJ'), ('GSVS', 'GSVS'), ('HBIO', 'HBIO'), ('HEBR', 'HEBR'), ('HHE', 'HHE'), ('HIAF', 'HIAF'), ('HIEA', 'HIEA'), ('HIEU', 'HIEU'), ('HILA', 'HILA'), ('HIME', 'HIME'), ('HIND', 'HIND'), ('HISA', 'HISA'), ('HIST', 'HIST'), ('HIUS', 'HIUS'), ('HR', 'HR'), ('HSCI', 'HSCI'), ('HUMS', 'HUMS'), ('IMP', 'IMP'), ('INST', 'INST'), ('ISBU', 'ISBU'), ('ISCP', 'ISCP'), ('ISHU', 'ISHU'), ('ISIN', 'ISIN'), ('ISLS', 'ISLS'), ('ISSS', 'ISSS'), ('IT', 'IT'), ('ITAL', 'ITAL'), ('ITTR', 'ITTR'), ('JAPN', 'JAPN'), ('JPTR', 'JPTR'), ('JWST', 'JWST'), ('KICH', 'KICH'), ('KINE', 'KINE'), ('KLPA', 'KLPA'), ('KOR', 'KOR'), ('KRTR', 'KRTR'), ('LAR', 'LAR'), ('LASE', 'LASE'), ('LAST', 'LAST'), ('LATI', 'LATI'), ('LAW', 'LAW'), ('LING', 'LING'), ('LNGS', 'LNGS'), ('LPPA', 'LPPA'), ('LPPL', 'LPPL'), ('LPPP', 'LPPP'), ('LPPS', 'LPPS'), ('MAE', 'MAE'), ('MATH', 'MATH'), ('MDST', 'MDST'), ('MED', 'MED'), ('MESA', 'MESA'), ('MEST', 'MEST'), ('MICR', 'MICR'), ('MISC', 'MISC'), ('MSE', 'MSE'), ('MSP', 'MSP'), ('MUBD', 'MUBD'), ('MUEN', 'MUEN'), ('MUPF', 'MUPF'), ('MUSI', 'MUSI'), ('NASC', 'NASC'), ('NCBM', 'NCBM'), ('NCCJ', 'NCCJ'), ('NCPR', 'NCPR'), ('NESC', 'NESC'), ('NUCO', 'NUCO'), ('NUIP', 'NUIP'), ('NURS', 'NURS'), ('PATH', 'PATH'), ('PC', 'PC'), ('PERS', 'PERS'), ('PETR', 'PETR'), ('PHAR', 'PHAR'), ('PHIL', 'PHIL'), ('PHS', 'PHS'), ('PHY', 'PHY'), ('PHYS', 'PHYS'), ('PLAC', 'PLAC'), ('PLAD', 'PLAD'), ('PLAN', 'PLAN'), ('PLAP', 'PLAP'), ('PLCP', 'PLCP'), ('PLIR', 'PLIR'), ('PLPT', 'PLPT'), ('POL', 'POL'), ('PORT', 'PORT'), ('POTR', 'POTR'), ('PPL', 'PPL'), ('PSCJ', 'PSCJ'), ('PSED', 'PSED'), ('PSHM', 'PSHM'), ('PSHP', 'PSHP'), ('PSLP', 'PSLP'), ('PSPA', 'PSPA'), ('PSPL', 'PSPL'), ('PSPM', 'PSPM'), ('PSPS', 'PSPS'), ('PST', 'PST'), ('PSTS', 'PSTS'), ('PSYC', 'PSYC'), ('RELA', 'RELA'), ('RELB', 'RELB'), ('RELC', 'RELC'), ('RELG', 'RELG'), ('RELH', 'RELH'), ('RELI', 'RELI'), ('RELJ', 'RELJ'), ('RELS', 'RELS'), ('RSC', 'RSC'), ('RUSS', 'RUSS'), ('RUTR', 'RUTR'), ('SANS', 'SANS'), ('SARC', 'SARC'), ('SAST', 'SAST'), ('SATR', 'SATR'), ('SEC', 'SEC'), ('SLAV', 'SLAV'), ('SLFK', 'SLFK'), ('SLTR', 'SLTR'), ('SOC', 'SOC'), ('SPAN', 'SPAN'), ('STAT', 'STAT'), ('STS', 'STS'), ('SWAH', 'SWAH'), ('SYS', 'SYS'), ('TURK', 'TURK'), ('UD', 'UD'), ('UNST', 'UNST'), ('URDU', 'URDU'), ('USEM', 'USEM'), ('VGRM', 'VGRM'), ('WGS', 'WGS'), ('ZFOR', 'ZFOR')], default='', max_length=4)),
                ('number', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(9999)])),
                ('name', models.CharField(default='', max_length=100)),
                ('section', models.CharField(default='', max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=30)),
                ('last_name', models.CharField(default='', max_length=30)),
                ('computing_id', models.CharField(default='', max_length=7)),
                ('pref_name', models.CharField(default='', max_length=30)),
                ('school_year', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('bio', models.CharField(default='', max_length=2600)),
                ('student_user', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=30)),
                ('attendees', models.ManyToManyField(related_name='studies', to='study.Student')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.course')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='study.student')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='roster',
            field=models.ManyToManyField(blank=True, related_name='courses', to='study.Student'),
        ),
    ]
